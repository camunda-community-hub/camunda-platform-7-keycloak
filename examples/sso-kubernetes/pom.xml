<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.camunda.bpm.extension.examples</groupId>
		<artifactId>camunda-platform-7-keycloak-examples</artifactId>
		<version>7.24.1-SNAPSHOT</version>
	</parent>

	<artifactId>camunda-platform-7-keycloak-examples-sso-kubernetes</artifactId>

  	<name>Camunda Platform 7 - engine plugins - identity - keycloak - examples - showcase</name>
	<description>Showcase for using Camunda Platform 7 Keycloak Identity Provider </description>

	<properties>
		<failOnMissingWebXml>false</failOnMissingWebXml>

		<docker.imageName>gunnaraccso/camunda-showcase-keycloak:${project.version}</docker.imageName>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
			<!-- <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId> -->
		</dependency>

		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>

		<!-- Keycloak Identity Prover Plugin  -->
		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-platform-7-keycloak</artifactId>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- Required to use Spin dataformat support -->
		<dependency>
			<groupId>org.camunda.spin</groupId>
			<artifactId>camunda-spin-dataformat-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-spin</artifactId>
		</dependency>

        <!-- Monitoring dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

		<!-- Required in order to run with Java > 8 -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-bpm-assert</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
          <groupId>org.camunda.bpm.extension</groupId>
          <artifactId>camunda-bpm-junit5</artifactId>
          <version>1.1.0</version>
          <scope>test</scope>
        </dependency>

		<!-- java util logging => slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Add your own dependencies here, if in compile scope, they are added 
			to the jar -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.dasniko</groupId>
			<artifactId>testcontainers-keycloak</artifactId>
			<version>3.2.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>Camunda Maven Repository</name>
			<url>https://artifacts.camunda.com/artifactory/public/</url>
		</repository>
		<!-- 
		<repository>
			<id>camunda-bpm-ee</id>
			<name>Camunda Enterprise Maven Repository</name>
			<url>https://artifacts.camunda.com/artifactory/camunda-bpm-ee/</url>
		</repository>
		-->
	</repositories>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${version.springBoot}</version>
				<configuration>
					<layout>ZIP</layout>
					<layers>
						<enabled>true</enabled>
					</layers>
					<image>
						<!--
						<builder>paketobuildpacks/builder:tiny</builder>
						-->
						<buildpacks>
							<buildpack>gcr.io/paketo-buildpacks/adoptium</buildpack>
							<buildpack>paketo-buildpacks/java</buildpack>
						</buildpacks>
						<env>
							<BP_JVM_VERSION>${version.java}</BP_JVM_VERSION>
							<BP_JVM_TYPE>JRE</BP_JVM_TYPE>
							<BP_JVM_JLINK_ENABLED>true</BP_JVM_JLINK_ENABLED>
							<BP_JVM_JLINK_ARGS>--no-man-pages --no-header-files --strip-debug --compress=2 --add-modules java.base,java.compiler,java.desktop,java.instrument,java.net.http,java.prefs,java.rmi,java.scripting,java.security.jgss,java.security.sasl,java.sql.rowset,jdk.attach,jdk.jdi,jdk.jfr,jdk.management,jdk.net,jdk.unsupported</BP_JVM_JLINK_ARGS>
						</env>
					</image>
					<imageName>${docker.imageName}</imageName>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<mainClass>org.camunda.bpm.extension.keycloak.showcase.CamundaApplication</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
                        <version>3.5.4</version>
						<configuration>
						</configuration>
						<dependencies>
						    <dependency>
						        <groupId>org.junit.jupiter</groupId>
						        <artifactId>junit-jupiter-engine</artifactId>
						        <version>6.0.0</version>
						    </dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
